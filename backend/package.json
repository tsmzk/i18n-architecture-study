{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon --exec ts-node src/app.ts",
    "build": "tsc",
    "start": "node dist/app.js",
    "docker:up": "docker-compose up -d mysql",
    "docker:down": "docker-compose down",
    "db:generate:pattern1": "prisma generate --schema=prisma/schema/pattern1.prisma",
    "db:generate:pattern2": "prisma generate --schema=prisma/schema/pattern2.prisma",
    "db:generate:pattern3": "prisma generate --schema=prisma/schema/pattern3.prisma",
    "db:generate:all": "npm run db:generate:pattern1 && npm run db:generate:pattern2 && npm run db:generate:pattern3",
    "db:migrate:pattern1": "DATABASE_URL=$DATABASE_URL_PATTERN1 prisma migrate deploy --schema=prisma/schema/pattern1.prisma",
    "db:migrate:pattern2": "DATABASE_URL=$DATABASE_URL_PATTERN2 prisma migrate deploy --schema=prisma/schema/pattern2.prisma",
    "db:migrate:pattern3": "DATABASE_URL=$DATABASE_URL_PATTERN3 prisma migrate deploy --schema=prisma/schema/pattern3.prisma",
    "db:migrate:all": "npm run db:migrate:pattern1 && npm run db:migrate:pattern2 && npm run db:migrate:pattern3",
    "db:new:pattern1": "DATABASE_URL=$DATABASE_URL_PATTERN1 prisma migrate dev --schema=prisma/schema/pattern1.prisma",
    "db:new:pattern2": "DATABASE_URL=$DATABASE_URL_PATTERN2 prisma migrate dev --schema=prisma/schema/pattern2.prisma",
    "db:new:pattern3": "DATABASE_URL=$DATABASE_URL_PATTERN3 prisma migrate dev --schema=prisma/schema/pattern3.prisma",
    "db:seed:pattern1": "TRANSLATION_PATTERN=pattern1 ts-node prisma/seeds/index.ts",
    "db:seed:pattern2": "TRANSLATION_PATTERN=pattern2 ts-node prisma/seeds/index.ts",
    "db:seed:pattern3": "TRANSLATION_PATTERN=pattern3 ts-node prisma/seeds/index.ts",
    "db:seed:all": "npm run db:seed:pattern1 && npm run db:seed:pattern2 && npm run db:seed:pattern3",
    "db:reset:pattern1": "DATABASE_URL=$DATABASE_URL_PATTERN1 prisma migrate reset --schema=prisma/schema/pattern1.prisma --force",
    "db:reset:pattern2": "DATABASE_URL=$DATABASE_URL_PATTERN2 prisma migrate reset --schema=prisma/schema/pattern2.prisma --force",
    "db:reset:pattern3": "DATABASE_URL=$DATABASE_URL_PATTERN3 prisma migrate reset --schema=prisma/schema/pattern3.prisma --force",
    "db:reset:all": "npm run db:reset:pattern1 && npm run db:reset:pattern2 && npm run db:reset:pattern3",
    "db:setup:all": "npm run docker:up && sleep 5 && npm run db:migrate:all && npm run db:generate:all",
    "db:full:all": "npm run db:setup:all && npm run db:seed:all",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:seed": "ts-node prisma/seeds/index.ts"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "@faker-js/faker": "^10.0.0",
    "@prisma/client": "^6.15.0",
    "cors": "^2.8.5",
    "detect-port": "^2.1.0",
    "dotenv": "^17.2.1",
    "express": "^4.21.2"
  },
  "devDependencies": {
    "@types/cors": "^2.8.19",
    "@types/detect-port": "^1.3.5",
    "@types/express": "^4.17.23",
    "@types/node": "^24.3.0",
    "nodemon": "^3.1.10",
    "prisma": "^6.15.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.2"
  }
}
